{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 \fmodern Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \qc \f0 \sa180 \li0 \fi0 \b \fs36 hswatchd\par}
{\pard \qc \f0 \sa180 \li0 \fi0  08.08.2024\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 NAME\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b hswatchd} - Ein Daemon zum Ueberwachen von Dateien\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 SYNOPSIS\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Daemonen werden ueber \u8220"systemd\u8221" gestartet. Dieser ueberwacht Dateien auf Aenderung und fuehrt, wenn vorhanden, einen Befehl aus.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 DESCRIPTION\par}
{\pard \ql \f0 \sa180 \li0 \fi0 hswatchd ist ausgelegt auf kleinst moegliche CPU-Performance. Er wird ueber den {\i systemd} gestartet. Wer moechte kann sich gerne auch eine init-Loesung schreiben.\line Alle Parameter werden in der {\b {\i /etc/hswatchd.rc}} eingetragen.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 OPTIONS\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b --version } :die aktuelle Version ausgeben lassen. Das Programm wird allerdings dann beendet.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Da hswatchd als Daemon gestartet wird, gibt es fuer den Betrieb keine Optionen. Daf\u252?r wird eine hswatchd.rc erwartet.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 SIGNALS\par}
{\pard \ql \f0 \sa0 \li0 \fi0 {\b SIGHUP,SIGKILL,SIGINT}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Der Daemon wird beendet\par}
{\pard \ql \f0 \sa0 \li0 \fi0 {\b SIGUSR1}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 reload der hswatchd.rc\par}
{\pard \ql \f0 \sa0 \li0 \fi0 {\b SIGUSR2}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 ausgabe der Infodatei\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 ENVIRONMENT\par}
{\pard \ql \f0 \sa0 \li0 \fi0 Starten, stopppen, service:\par}
{\pard \ql \f0 \sa0 \li360 \fi0 siehe Anschnitt: {\b SYSTEMD}\par}
{\pard \ql \f0 \sa0 \li0 \fi0 Konfiguration:\par}
{\pard \ql \f0 \sa0 \li360 \fi0 siehe Anschnitt: {\b hswatchd.rc}\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 SYSTEMD\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Sicher gibt es viele Wege um einen Daemon zu laufen zu bekommen. Derzeit wird aber SYSTEMD ueberall verwendet.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Achtung. Zum grossen Teil werden ROOT-Rechte noetig sein.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Datei erstellen\line :/etc/systemd/system/hswatchd.service\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Inhalt:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 [Unit]\line
Description=hswatchd - demon watching files for changing\line
After=network.target\line
\line
[Service]\line
ExecStart=/usr/sbin/hswatchd\line
ExecStop=/bin/kill -HUP $MAINPID\line
ExecReload=/bin/kill -USR1 $MAINPID\line
\line
StandardOutput=null\line
#StandardOutput=/root/out.txt\line
#Restart=on-failure\line
\line
[Install]\line
WantedBy=multi-user.target\par}
{\pard \ql \f0 \sa180 \li0 \fi0 #EOF\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Service einrichten (einmalig, started danach automatisch mit):\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 systemctl daemon-reload\line
systemctl enable hswatchd.service\line
systemctl start hswatchd.service\line
systemctl status hswatchd\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 hswatchd.rc\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b Parameter:}\par}
{\pard \ql \f0 \sa0 \li0 \fi0 # Server Einstellungen\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Zeilen, die mit \u8216'#\u8217' beginnen, sind Kommentare und werden entsprechend ignoriert. Uebrigens auch Leerzeilen\par}
{\pard \ql \f0 \sa0 \li0 \fi0 port = 8080\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Portangabe. hswatchd kann \u252?ber http abgefragt werden\par}
{\pard \ql \f0 \sa0 \li360 \fi0 siehe Anschnitt: **HTTP*\par}
{\pard \ql \f0 \sa0 \li0 \fi0 time = ###\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Defaultangabe zum verweilen zwischen einer Pruefeinheit. Ist nicht so wichtig, da die Zeit automatisch errechnet wird.\par}
{\pard \ql \f0 \sa0 \li0 \fi0 cache = {\i true} oder {\i false}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Die Benutzung des Caches erlauben/verbieten\par}
{\pard \ql \f0 \sa0 \li0 \fi0 cachepath = {\i Pfad_zur_Cachedatei}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Der Pfad f\u252?r eine chache-Datei. Es wird in dieser Datei die sekundengenaue Zeit der letzten Pruefung jedes File gespeichert. Gefolgt von dem Dateinamen.\par}
{\pard \ql \f0 \sa0 \li0 \fi0 infoupdate = 3600\par}
{\pard \ql \f0 \sa0 \li360 \fi0 In diesem Fall wird alle 3600 Sekunden ein Infofile erstellt.\par}
{\pard \ql \f0 \sa0 \li0 \fi0 infofile = {\i File_fuer_InfoFile}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Der vollst\u228?ndige Pfad zur Datei. Es wird eine reine Textdatei geschrieben. Ist Markdown formatierbar. Diese Angabe kann auch leer sein (oder besser auskommentiert) werden.\par}
{\pard \ql \f0 \sa0 \li0 \fi0 favicon = /srv/pub/share/hswatchd/pc-hesti.png\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Pfad zu einem FAV-Icon f\u252?r die html-funktion. Wer keines m\u246?chte l\u228?st es weg. F\u252?r jeden im eigenen Netz laufenden hswatchd l\u228?sst sich damit ein anderers ICON realisieren\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Jeder Eintrag mit \u8220"file \u8230?.\u8221" in der hswatchd.rc wird in eine einfach verkettete Liste sortiert, nach naechster Bearbeitungszeit, aufgenommen. Dadurch wird erreicht das der naechste zu verarbeitende Datensatz ganz oben steht. Die Diff-Zeit wird auch genommen, um die naechste Wartezeit zu setzen. Ist so ein Datensatz abgearbeitet, wird neu entschieden, wo er in der Liste zu stehen hat. Und es wird eine neue Wartezeit bestimmt. Diese Informationen koennen auch \u252?ber http abgerufen werden !!\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Konfigurations-Datei erstellen\line :/etc/hswatchd.rc\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Beispiel:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 # systemweite hswatchd - Konfigurationsdatei\line
\line
port        = 8080\line
time        = 1\line
cache       = true\line
cachepath   = /var/hswatchd/files.cache\line
infoupdate  = 3600\line
infofile    = /srv/pub/www/data/watch-debug-hesti.txt\line
favicon     = /srv/pub/share/hswatchd/pc-hesti-debug.png\line
\line
# File - Section\line
file /pub/share/network/stuff.txt       25  /bin/bash /root/bin/doany.sh inplement stuff\line
file /pub/share/network/admin_hosts     60  cp /pub/share/network/newfile_hosts /etc/hosts\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 HTTP-Service\par}
{\pard \ql \f0 \sa180 \li0 \fi0 hswatchd verf\u252?gt eine rudiment\u228?re html-Schnittstelle. Hier lassen sich ein paar Informationen abrufen. Der Port ist in der {\i hswatchd.rc} zu definiert.\par}
{\pard \ql \f0 \sa0 \li0 \fi0 {\i server:8080/reload.cgi}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 wird hswatchd dazu veranlassen die hswatchd.rc neu zu laden.\par}
{\pard \ql \f0 \sa0 \li0 \fi0 {\i server:8080/date.cgi}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 gibt das aktuelle datum mit der Zeit aus. Das war nur zum Testen drin, aber es stoert ja auch niemanden.\par}
{\pard \ql \f0 \sa0 \li0 \fi0 {\i server:8080/nextwatch.html}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Eine ausfuerliche Seite, welche Dateien als naechstes geprueft werden und eine kurze Uebersicht welche Parameter mit wirken.\par}
{\pard \ql \f0 \sa0 \li0 \fi0 {\i server:8080/drive.cgi?}\par}
{\pard \ql \f0 \sa0 \li360 \fi0 Gefolgt von dem Mount-Point gibt ein paar Informationen ueber gemountete Laufwerke auf dem Server preis. Diese koennen so gezielt gesammelt werden. Ein Aufruf wie {\i server:8080//drive.cgi?&boot} wird die RootPartition und die boot-Partition ausgeben.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 #EOF\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 AUTHORS\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Heiko Stoevesandt - alias Hesti - {\field{\*\fldinst{HYPERLINK "mailto:hstools@t-online.de"}}{\fldrslt{\ul
hstools@t-online.de
}}}
\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 FEHLER\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Fehler (auch in dieser Manpage) unbedingt bitte melden\par}
}
